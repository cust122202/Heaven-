# encoding=utf-8
# 用指数函数拟合curve_fit

from scipy.optimize import curve_fit
import matplotlib.pyplot as plt
import numpy as np

# 定义一个函数:a*e^(-bx)+c,返回函数值
def func(x,a,b,c):
    y = a * np.exp(-b*x) + c
    return y
    
xdata = np.linspace(0,4,60)
y = func(xdata, 2.5, 1.3, 0.5)#定义ｙ为拟合函数对应的函数值。
#plt.plot(xdata,y,'y')
ydata = y + 0.2*np.random.normal(size=len(xdata))#为ｙ加上一个随机数表示与拟合函数的值有一定的偏差
plt.plot(xdata,ydata,'b-',label ='ydata')
popt, pcov = curve_fit(func, xdata, ydata)
y2 = [func(i,popt[0],popt[1],popt[2]) for i in xdata]
y3 = func(xdata,popt[0],popt[1],popt[2])# y2==y3
#if np.array(y2).all() == np.array(y3).all():
    #print('true')
#else:
    #print('false')
print(y2==y3)
plt.plot(xdata, y2, 'r--',label='y2')
plt.legend(loc=1)
print(popt)
plt.show()
